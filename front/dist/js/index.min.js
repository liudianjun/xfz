function Banner(){console.log("----loop----"),this.index=1,this.arrowleft=$(".arrows-left"),this.arrowright=$(".arrows-right"),this.bannergroup=$("#banner-group"),this.bannerul=$("#banner-ul"),this.lilist=this.bannerul.children("li"),this.bannercount=this.lilist.length,console.log(this.bannercount),this.pagecontrol=$(".page-control")}Banner.prototype.initbanner=function(){var n=this,t=n.lilist.eq(0).clone(),e=n.lilist.eq(n.bannercount-1).clone();n.bannerul.append(t),n.bannerul.prepend(e),n.bannerul.css({width:798*(n.bannercount+2),left:-798})},Banner.prototype.toggleArrow=function(n){n?(this.arrowleft.show(),this.arrowright.show()):(this.arrowleft.hide(),this.arrowright.hide())},Banner.prototype.animate=function(){var n=this;n.bannerul.animate({left:-798*n.index},500);var t=n.index;t=0===t?n.bannercount-1:t===n.bannercount+1?0:n.index-1,n.pagecontrol.children("li").eq(t).addClass("active").siblings().removeClass("active")},Banner.prototype.initpagecontrol=function(){for(var n=this,t=0;t<n.bannercount;t++){var e=$("<li></li>");n.pagecontrol.append(e),n.pagecontrol.css({width:12*n.bannercount+16+16*(n.bannercount-1)})}},Banner.prototype.listenpagecontrol=function(){var e=this;e.pagecontrol.children("li").each(function(n,t){$(t).click(function(){e.index=n+1,e.animate()})})},Banner.prototype.listenArrowClick=function(){var n=this;n.arrowleft.click(function(){0===n.index?(n.bannerul.css({left:798*n.bannercount}),n.index=n.bannercount-1):n.index--,n.animate()}),n.arrowright.click(function(){n.index===n.bannercount+1?(n.bannerul.css({left:-798}),n.index=2):n.index++,n.animate()})},Banner.prototype.listenbannerhover=function(){var n=this;this.bannergroup.hover(function(){clearInterval(n.timer),n.toggleArrow(!0)},function(){n.loop(),n.toggleArrow(!1)})},Banner.prototype.loop=function(){var n=this;console.log("----loop----"),this.timer=setInterval(function(){n.index>=n.bannercount+1?(n.bannerul.css({left:-798}),n.index=2):n.index++,n.animate()},2e3)},Banner.prototype.run=function(){this.initbanner(),this.initpagecontrol(),this.loop(),this.listenArrowClick(),this.listenpagecontrol(),this.listenbannerhover()},$(function(){(new Banner).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
